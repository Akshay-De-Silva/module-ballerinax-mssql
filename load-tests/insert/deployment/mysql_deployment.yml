## Initialization script storage
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: init-script-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Mi
---
## MySQL data storage
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  selector:
    matchLabels:
      app: mysql8
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql8
        logs: "true"
    spec:
      initContainers:
        - name: init-script-downloader
          image: appropriate/curl
          args:
            - "-o"
            - "/tmp/data/init.sql"
            - "https://raw.githubusercontent.com/kaneeldias/module-ballerinax-mysql/load-tests/load-tests/insert/scripts/init.sql"
          volumeMounts:
            - name: init-script
              mountPath: /tmp/data
      containers:
        - name: mysql8
          image: mysql:8.0.22
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-script
          persistentVolumeClaim:
            claimName: init-script-pvc
        - name: data
          persistentVolumeClaim:
            claimName: mysql-data-pvc
---
## Service
apiVersion: v1
kind: Service
metadata:
  name: mssql-service
  labels:
    app: mysql8
spec:
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: mssql
---
